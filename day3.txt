Write a POST at bestDevOps.com.

Title - Overview of Kubernetes with Architecture Examplained!!

- What is Kubernetes?
- Why Do we need Kubernetes?
- Benefits of kUbernetes?
- How Kubernetes works aka Kubernetes architecture with image
- What is POD?
=====================================================================
Master
- API Server		POD -> Container -> Docker Image -> Google Registry
- Etcd			POD -> Container -> Docker Image -> Google Registry
- Schedular		POD -> Container -> Docker Image -> Google Registry
- Controller mgr	POD -> Container -> Docker Image -> Google Registry
- Kube Proxy		POD -> Container -> Docker Image -> Google Registry
 
- Kubelet
- Docker
- Kubectl
- Kubeadm init

Worker
- Kubelet
- Docker
- Kube Proxy		POD -> Container -> Docker Image -> Google Registry
- Kubectl
- Kubeadm join  

Workstation
- Kubectl

https://www.devopsschool.com/blog/setting-up-kubernetes-clusters-using-kubeadm-manual-way-in-rhel-7-centos7/

Master - 
52.66.157.161

Workstation
52.66.157.161
centos
centos123

WORKER -
3.109.2.63

======================WORKSTATIOn=======================================
Your Kubernetes control-plane has initialized successfully!

To start using your cluster, you need to run the following as a regular user:

  mkdir -p $HOME/.kube
  sudo cp -i /etc/kubernetes/admin.conf $HOME/.kube/config
  sudo chown $(id -u):$(id -g) $HOME/.kube/config

Alternatively, if you are the root user, you can run:

  export KUBECONFIG=/etc/kubernetes/admin.conf

======================NETWORK DRIVER=======================================

You should now deploy a pod network to the cluster.
Run "kubectl apply -f [podnetwork].yaml" with one of the options listed at:
  https://kubernetes.io/docs/concepts/cluster-administration/addons/

======================WORKER=======================================
Then you can join any number of worker nodes by running the following on each as root:

kubeadm join 172.31.3.180:6443 --token j056po.zz257cm8sou93v6o \
        --discovery-token-ca-cert-hash sha256:4d3bbf6d64bf59d5c27940ca6f7fffe5d2c84b4b71d60c03464159ed4505e57b



How kubectl talk to API Server?
==================================
		config
		$USER_HOME/.kube/config
		./kube/config
		export KUBECONFIG=/etc/kubernetes/admin.conf

============================================================================================
============================================================================================
What do you want??



[centos@ip-172-31-3-180 ~]$ kubectl
kubectl controls the Kubernetes cluster manager.

 Find more information at: https://kubernetes.io/docs/reference/kubectl/overview/

Basic Commands (Beginner):
  create        Create a resource from a file or from stdin
  expose        Take a replication controller, service, deployment or pod and expose it as a new Kubernetes service
  run           Run a particular image on the cluster
  set           Set specific features on objects

Basic Commands (Intermediate):
  explain       Get documentation for a resource
  get           Display one or many resources
  edit          Edit a resource on the server
  delete        Delete resources by file names, stdin, resources and names, or by resources and label selector

Deploy Commands:
  rollout       Manage the rollout of a resource
  scale         Set a new size for a deployment, replica set, or replication controller
  autoscale     Auto-scale a deployment, replica set, stateful set, or replication controller

Cluster Management Commands:
  certificate   Modify certificate resources.
  cluster-info  Display cluster information
  top           Display resource (CPU/memory) usage
  cordon        Mark node as unschedulable
  uncordon      Mark node as schedulable
  drain         Drain node in preparation for maintenance
  taint         Update the taints on one or more nodes

Troubleshooting and Debugging Commands:
  describe      Show details of a specific resource or group of resources
  logs          Print the logs for a container in a pod
  attach        Attach to a running container
  exec          Execute a command in a container
  port-forward  Forward one or more local ports to a pod
  proxy         Run a proxy to the Kubernetes API server
  cp            Copy files and directories to and from containers
  auth          Inspect authorization
  debug         Create debugging sessions for troubleshooting workloads and nodes

Advanced Commands:
  diff          Diff the live version against a would-be applied version
  apply         Apply a configuration to a resource by file name or stdin
  patch         Update fields of a resource
  replace       Replace a resource by file name or stdin
  wait          Experimental: Wait for a specific condition on one or many resources
  kustomize     Build a kustomization target from a directory or URL.

Settings Commands:
  label         Update the labels on a resource
  annotate      Update the annotations on a resource
  completion    Output shell completion code for the specified shell (bash or zsh)

Other Commands:
  api-resources Print the supported API resources on the server
  api-versions  Print the supported API versions on the server, in the form of "group/version"
  config        Modify kubeconfig files
  plugin        Provides utilities for interacting with plugins
  version       Print the client and server version information

Usage:
  kubectl [flags] [options]

Use "kubectl <command> --help" for more information about a given command.
Use "kubectl options" for a list of global command-line options (applies to all commands).



[centos@ip-172-31-3-180 ~]$ kubectl api-resources
NAME                              SHORTNAMES   APIVERSION                             NAMESPACED   KIND
bindings                                       v1                                     true         Binding
componentstatuses                 cs           v1                                     false        ComponentStatus
configmaps                        cm           v1                                     true         ConfigMap
endpoints                         ep           v1                                     true         Endpoints
events                            ev           v1                                     true         Event
limitranges                       limits       v1                                     true         LimitRange
namespaces                        ns           v1                                     false        Namespace
nodes                             no           v1                                     false        Node
persistentvolumeclaims            pvc          v1                                     true         PersistentVolumeClaim
persistentvolumes                 pv           v1                                     false        PersistentVolume
pods                              po           v1                                     true         Pod
podtemplates                                   v1                                     true         PodTemplate
replicationcontrollers            rc           v1                                     true         ReplicationController
resourcequotas                    quota        v1                                     true         ResourceQuota
secrets                                        v1                                     true         Secret
serviceaccounts                   sa           v1                                     true         ServiceAccount
services                          svc          v1                                     true         Service
mutatingwebhookconfigurations                  admissionregistration.k8s.io/v1        false        MutatingWebhookConfiguration
validatingwebhookconfigurations                admissionregistration.k8s.io/v1        false        ValidatingWebhookConfiguration
customresourcedefinitions         crd,crds     apiextensions.k8s.io/v1                false        CustomResourceDefinition
apiservices                                    apiregistration.k8s.io/v1              false        APIService
controllerrevisions                            apps/v1                                true         ControllerRevision
daemonsets                        ds           apps/v1                                true         DaemonSet
deployments                       deploy       apps/v1                                true         Deployment
replicasets                       rs           apps/v1                                true         ReplicaSet
statefulsets                      sts          apps/v1                                true         StatefulSet
tokenreviews                                   authentication.k8s.io/v1               false        TokenReview
localsubjectaccessreviews                      authorization.k8s.io/v1                true         LocalSubjectAccessReview
selfsubjectaccessreviews                       authorization.k8s.io/v1                false        SelfSubjectAccessReview
selfsubjectrulesreviews                        authorization.k8s.io/v1                false        SelfSubjectRulesReview
subjectaccessreviews                           authorization.k8s.io/v1                false        SubjectAccessReview
horizontalpodautoscalers          hpa          autoscaling/v1                         true         HorizontalPodAutoscaler
cronjobs                          cj           batch/v1                               true         CronJob
jobs                                           batch/v1                               true         Job
certificatesigningrequests        csr          certificates.k8s.io/v1                 false        CertificateSigningRequest
leases                                         coordination.k8s.io/v1                 true         Lease
endpointslices                                 discovery.k8s.io/v1                    true         EndpointSlice
events                            ev           events.k8s.io/v1                       true         Event
flowschemas                                    flowcontrol.apiserver.k8s.io/v1beta1   false        FlowSchema
prioritylevelconfigurations                    flowcontrol.apiserver.k8s.io/v1beta1   false        PriorityLevelConfiguration
ingressclasses                                 networking.k8s.io/v1                   false        IngressClass
ingresses                         ing          networking.k8s.io/v1                   true         Ingress
networkpolicies                   netpol       networking.k8s.io/v1                   true         NetworkPolicy
runtimeclasses                                 node.k8s.io/v1                         false        RuntimeClass
poddisruptionbudgets              pdb          policy/v1                              true         PodDisruptionBudget
podsecuritypolicies               psp          policy/v1beta1                         false        PodSecurityPolicy
clusterrolebindings                            rbac.authorization.k8s.io/v1           false        ClusterRoleBinding
clusterroles                                   rbac.authorization.k8s.io/v1           false        ClusterRole
rolebindings                                   rbac.authorization.k8s.io/v1           true         RoleBinding
roles                                          rbac.authorization.k8s.io/v1           true         Role
priorityclasses                   pc           scheduling.k8s.io/v1                   false        PriorityClass
csidrivers                                     storage.k8s.io/v1                      false        CSIDriver
csinodes                                       storage.k8s.io/v1                      false        CSINode
csistoragecapacities                           storage.k8s.io/v1beta1                 true         CSIStorageCapacity
storageclasses                    sc           storage.k8s.io/v1                      false        StorageClass
volumeattachments                              storage.k8s.io/v1                      false        VolumeAttachment
[centos@ip-172-31-3-180 ~]$






  16  kubectl get nodes
   17  kubectl get pods --all-namespaces
   18  clear
   19  kubectl get pods --all-namespaces
   20  kubectl get nodes
   21  clear
   22  ls
   23  kubectl
   24  clear
   25  kubectl cluster-info
   26  kubectl api-resources
   27  clear
   28  kubectl get ns
   29  kubectl version
   30  kubectl api-versions

kubectl config view


======================================================================================

CRUD
---------------------
CREATE
	CMD
		create
	YAML
		create -f filename

READ
	CMD
		get
		describe
	YAML
		get -f filename

UPDATE
	CMD
		edit
	YAML 
		apply -f filename
DELETE
	CMD
		delete
	YAML
		delete -f filename



 28  kubectl get ns
   29  kubectl version
   30  kubectl api-versions
   31  history
   32  clear
   33  sudo -s
   34  kubectl get ns
   35* kubectl create ns raje
   36  kubectl get ns
   37  kubectl describe ns rajesh
   38  clear
   39  kubectl edit ns rajesh
   40  kubectl describe ns rajesh
   41  kubectl get ns
   42  kubectl delete ns rajesh
   43  kubectl get ns


apiVersion: v1
kind: Namespace
metadata:
  name: rajesh1
  labels:
    team: rajesh


 52  ls
   53  vi ns.yaml
   54  kubectl create -f ns.yaml
   55  kubectl get -f ns.yaml
   56  vi ns.yaml
   57  kubectl explan ns
   58  kubectl explain ns
   59  kubectl explain ns.metadata
   60  clear
   61  vi ns.yaml
   62  kubectl apply -f ns.yaml
   63  kubectl get -f ns.yaml
   64  kubectl get -f ns.yaml --show-labesl
   65  kubectl get -f ns.yaml --show-labels
   66  kubectl describe -f ns.yaml
   67  kubectl describe ns rajesh1
   68  ls
   69  clear
   70  ls
   71  kubectl delete -f ns.yaml
   72  kubectl get -f ns.yaml --show-labels
   73  history




